{"version":3,"sources":["logo.svg","app/ResizableBox.js","app/money_graph.js","app/customer_histogram.js","app/home.js","App.js","reportWebVitals.js","index.js"],"names":["ResizableBox","children","width","height","resizable","style","className","Money_Graph","data","React","useMemo","label","primary","Date","secondary","color","series","type","axes","position","stacked","format","d","backgroundColor","tooltip","primaryCursor","secondaryCursor","dark","CustHistogram","forEach","timeGroup","Data","map","obj","Object","keys","key","parseInt","DateTime","substring","points","push","home","props","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1b8fb22.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport { ResizableBox as ReactResizableBox } from \"react-resizable\";\r\n\r\nimport \"react-resizable/css/styles.css\";\r\n\r\nexport default function ResizableBox({\r\n  children,\r\n  width = 500,\r\n  height = 300,\r\n  resizable = true,\r\n  style = {},\r\n  className,\r\n}) {\r\n  return (\r\n    <div>\r\n      {resizable ? (\r\n        <ReactResizableBox width={width} height={height}>\r\n          <div\r\n            style={{\r\n              ...style,\r\n              width: \"100%\",\r\n              height: \"100%\",\r\n            }}\r\n            className={className}\r\n          >\r\n            {children}\r\n          </div>\r\n        </ReactResizableBox>\r\n      ) : (\r\n        <div\r\n          style={{\r\n            width: `${width}px`,\r\n            height: `${height}px`,\r\n            ...style,\r\n          }}\r\n          className={className}\r\n        >\r\n          {children}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Chart } from \"react-charts\";\r\nimport Data from \"../data.json\";\r\nimport ResizableBox from \"./ResizableBox\";\r\nfunction Money_Graph() {\r\n  // let date_price = Data.map((item) => {\r\n  //   let currency = item[\"Purchase Price\"];\r\n  //   let price = currency.slice(1, currency.length);\r\n  //   price = parseFloat(price);\r\n  //   const date = new Date(item.DateTime);\r\n  //   return {\r\n  //     x: date,\r\n  //     y: price,\r\n  //   };\r\n  // });\r\n  // date_price = date_price.slice(15, 25);\r\n  // console.log(date_price);\r\n  const data = React.useMemo(\r\n    () => [\r\n      {\r\n        label: \"G1\",\r\n        data: [\r\n          { primary: new Date(\"2021-02-07T18:00:00.000\"), secondary: 12 },\r\n          { primary: new Date(\"2021-02-07T18:30:00.000\"), secondary: 77 },\r\n          { primary: new Date(\"2021-02-07T19:00:00.000\"), secondary: 12 },\r\n          { primary: new Date(\"2021-02-07T19:30:00.000\"), secondary: 66 },\r\n          { primary: new Date(\"2021-02-07T20:00:00.000\"), secondary: 59 },\r\n          { primary: new Date(\"2021-02-07T20:30:00.000\"), secondary: 60 },\r\n          { primary: new Date(\"2021-02-07T21:00:00.000\"), secondary: 23 },\r\n          { primary: new Date(\"2021-02-07T21:30:00.000\"), secondary: 90 },\r\n          { primary: new Date(\"2021-02-07T22:00:00.000\"), secondary: 59 },\r\n          { primary: new Date(\"2021-02-07T22:30:00.000\"), secondary: 50 },\r\n        ],\r\n        color: \"#d50000\",\r\n      },\r\n    ],\r\n    []\r\n  );\r\n  const series = React.useMemo(\r\n    () => ({\r\n      type: \"area\",\r\n    }),\r\n    []\r\n  );\r\n\r\n  const axes = React.useMemo(\r\n    () => [\r\n      { primary: true, position: \"bottom\", type: \"time\" },\r\n      {\r\n        position: \"left\",\r\n        type: \"linear\",\r\n        stacked: true,\r\n        format: (d) => `$${d}`,\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const lineChart = (\r\n    <ResizableBox\r\n      style={{\r\n        backgroundColor: \"#263238\",\r\n      }}\r\n    >\r\n      <Chart\r\n        data={data}\r\n        series={series}\r\n        axes={axes}\r\n        tooltip\r\n        primaryCursor\r\n        secondaryCursor\r\n        dark\r\n      />\r\n    </ResizableBox>\r\n  );\r\n  return lineChart;\r\n}\r\n\r\nexport default Money_Graph;\r\n","import React from \"react\"\r\nimport { Chart } from 'react-charts'\r\nimport fs from \"fs\"\r\nimport Data from \"../data.json\"\r\n\r\n/* reading the mock data */\r\n\r\n\r\n/*put the mock data into a chart*/ \r\nfunction CustHistogram(){\r\n\r\n    /*Create time groups*/ \r\n    let timeGroups = [[0, 4], [4,8], [8,12], [12,16], [16,20], [20,24]]\r\n    var d = {}\r\n    timeGroups.forEach(timeGroup => {\r\n        d[timeGroup] = 0\r\n    });\r\n    \r\n    /*count the purchases by time*/\r\n    Data.map((obj) => ( \r\n            (Object.keys(d)).forEach(key => {\r\n                if((parseInt(obj.DateTime.substring(11, 13))) >= key[0] \r\n                && (parseInt(obj.DateTime.substring(11, 13))) < key[1]){\r\n                    d[key]+=1\r\n                }\r\n            })\r\n        )\r\n    )\r\n    \r\n    /*put the data in coordinate point form*/ \r\n    var points = []\r\n    for (var key in d){\r\n        points.push([key, d[key]])\r\n    }\r\n\r\n    /*insert the data into the graph*/\r\n    const data = React.useMemo(\r\n        () => [\r\n            {\r\n                label: \"customer frequency vs time period\",\r\n                data: points\r\n            }\r\n        ],\r\n        []\r\n    )\r\n    const axes = React.useMemo(\r\n        () => [\r\n            { primary: true, type: 'linear', position: 'bottom' },\r\n            { type: 'linear', position: 'left' }\r\n        ],\r\n        []\r\n    )\r\n    const barChart = (\r\n        <div\r\n            style={{\r\n                width: '400px',\r\n                height: '300px'\r\n            }}\r\n        >\r\n            <Chart data={data} axes={axes} />\r\n        </div>\r\n    )\r\n    return barChart\r\n}\r\n\r\n\r\nexport default CustHistogram\r\n\r\n/* CONVERT CSV TO JSON\r\n\r\n    function jsonConvert(data){\r\n        let csv = fs.readFileSync(data)\r\n        let arrayLines = csv.split(\"\\n\")\r\n        let result = []\r\n        let headers = arrayLines[0].split(\", \") //get the headers \r\n\r\n        //read each line after the headers and place them into the proper column\r\n        for(var i=1;i<arrayLines.length;i++){\r\n\r\n            var obj = {};\r\n            var line=arrayLines[i].split(\",\"); //get the individual parts of the line \r\n    \r\n            for(var j=0;j<headers.length;j++){\r\n                obj[headers[j]] = line[j]; //put each part in the right column\r\n            }\r\n    \r\n            result.push(obj);\r\n        }\r\n    \r\n        //return result; //JavaScript object\r\n        return JSON.stringify(result); //JSON\r\n    }\r\n\r\n    var json_data = jsonConvert(data)\r\n*/","import React from \"react\";\r\nimport Money_Graph from \"./money_graph\";\r\nimport CustHistogram from \"./customer_histogram\";\r\n\r\nfunction home(props) {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-sm\">\r\n          <div className=\"row\">\r\n            <h1>Amount Purchased Throughout the Day</h1>\r\n          </div>\r\n          <div className=\"row\">\r\n            <Money_Graph />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm\">\r\n          <CustHistogram />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default home;\r\n","import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport Home from \"./app/home\";\r\nfunction App() {\r\n  return (\r\n    <div style={{ height: \"100vh\" }}>\r\n      <Home />;\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}